name: SonarQube
on:
  push:
    branches: [main, dev]
    paths:
      - "chargingplatform/**"
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: "zulu" # Alternative distribution options are available.
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: make a copy of existing cucumber results
        working-directory: chargingplatform
        run: |
          mv results/cucumber.json results/backup_cucumber.json

      - name: Build and analyze
        working-directory: chargingplatform
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn verify -B \
            org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=GCapaross_TQS-Group-Project \
            -Dxray.skip=true \
            -Dcucumber.filter.tags="@SKIP_ALL"

      - name: make a copy of existing cucumber results
        working-directory: chargingplatform
        run: |
          mv results/backup_cucumber.json results/cucumber.json 

      - name: Push results to Xray on Jira Cloud
        working-directory: chargingplatform
        env:
          XRAYCLOUD_CLIENT_ID: ${{ secrets.XRAYCLOUD_CLIENT_ID }}
          XRAYCLOUD_CLIENT_SECRET: ${{ secrets.XRAYCLOUD_CLIENT_SECRET }}
          REVISION: ${{ github.ref_name}}
        run: |
          echo "Client ID is set: $([[ -n "$XRAYCLOUD_CLIENT_ID" ]] && echo "YES" || echo "NO")"; \
          echo "Client Secret is set: $([[ -n "$XRAYCLOUD_CLIENT_SECRET" ]] && echo "YES" || echo "NO")"; \
          echo "Client ID length: ${#XRAYCLOUD_CLIENT_ID}"; \
          echo "Client Secret length: ${#XRAYCLOUD_CLIENT_SECRET}"; \
          mvn \
            xray:import-results
            -Dxray.clientId=${XRAYCLOUD_CLIENT_ID} \
            -Dxray.clientSecret=${XRAYCLOUD_CLIENT_SECRET} \
            -Dxray.projectKey=EDISON \
            -Dxray.cloud=true \
            -Dxray.revision=${REVISION} \
            --debug
